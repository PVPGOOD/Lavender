package io.justme.lavender.module.impl.exploit.disabler;

import io.justme.lavender.events.game.EventTick;
import io.justme.lavender.events.network.EventPacket;
import io.justme.lavender.events.player.EventMotionUpdate;
import io.justme.lavender.module.impl.exploit.disabler.impl.BlocksMC;
import io.justme.lavender.module.impl.exploit.disabler.impl.WatchdogDisabler;
import io.justme.lavender.module.impl.exploit.disabler.process.PacketProcessor;
import io.justme.lavender.utility.interfaces.IMinecraft;
import io.justme.lavender.utility.network.PacketUtility;
import lombok.Getter;

import java.util.HashMap;

/**
 * @author JustMe.
 * @since 2024/5/2
 **/

@Getter
public abstract class AbstractDisabler implements IMinecraft {

    private static final HashMap<Class<? extends AbstractDisabler>, AbstractDisabler> disables = new HashMap<>();
    protected final PacketProcessor dataProcessor = new PacketProcessor();
    protected final PacketUtility packetUtility = new PacketUtility();
    private final String name;

    public AbstractDisabler(String name) {
        this.name = name;
    }

    public static void onInitialization() {
        disables.put(WatchdogDisabler.class, new WatchdogDisabler());
        disables.put(BlocksMC.class, new BlocksMC());
    }

    public static AbstractDisabler find(String name) {
        return disables.values().stream().filter(mode -> mode.getName().equals(name)).findFirst().orElse(null);
    }

    public abstract void onEnable();

    public abstract void onDisable();

    public abstract void onPacket(EventPacket event);

    public abstract void onMotionUpdate(EventMotionUpdate event);
    public abstract void onTick(EventTick event);
}
